SheafSystem Release Notes Version @SHEAFSYSTEM_LIB_VERSION@  @RELEASE_DATE@

Changes pulled from github.com/DavidMButler/SheafSystem branch issue2

1. Qualified all internal includes of SheafSystem and SheafSystemTest header files
   by scope "SheafSystem" and "SheafSystemTest", respectively,
   e.g. #include "SheafSystemTest/xxx.h".

2. Updated build system to copy all header files into <build dir>/include/SheafSystem
   so scoped header references will resolve correctly at compile time.

3. Changed PREREQ_SHEAFSYSTEM_HOME to PREREQ_SHEAFSYSTEM_CONFIG_DIR. The latter is consistent
   with way we specify finding the config files for other prerequisites (e.g. HDF5)
   and eliminates an ambiguity that was causing link errors when the home variable
   wasn't specified correctly. PREREQ_SHEAFSYSTEM_CONFIG_DIR should always the directory
   containing the SheafSystem config file, whether in an installation tree or a source tree.
   Specifically, <installation root>/cmake or <source root>/build/cmake, respectively.

SheafSystem Release Notes Version 4.0.0.1  Tue 04/08/17

Changes pulled from github.com/DavidMButler/SheafSystem branch version-4-merge

1.  Merged release 4.0.0.0 from LPS private repository into github repository.
    Private repository was heretofore maintained to satisfy contractual obligations
    that no longer exist. All future development will take place in github repository.

SheafSystemTest Release Notes Version 4.0.0.0  07/20/2016

Changes in branch COM-521:

1.  Updated entire system to Windows10/VS2015/RHEL6.6/gcc4.9.3/C++11

2.  Updated to current (or at least newer) versions of all prerequisties, see
    the README-Linux or README-Windows files.

3.  Completely refactored and reimplemented build sys for consistency with CMake 3.x.
    See the README files for detailed instructions on new build procedures.
    Supports <package>Config discovery mechanism, see CMake documentation.

Changes in branch COM-521-2:

1. Removed declaration of separate projects for each component.
2. Reimplemented check targets to run tests in parallel
3. Added CMake cache variable SHFSYSTST_TEST_JOBS to control number of
   concurrent test jobs. SHFSYSTST_TEST_JOBS=1 results in sequential execution.
